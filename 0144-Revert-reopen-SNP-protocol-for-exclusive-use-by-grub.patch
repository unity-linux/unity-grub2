From 7766b66bf1f1c7c586026be98883e60e2cc943b9 Mon Sep 17 00:00:00 2001
From: Peter Jones <pjones@redhat.com>
Date: Thu, 7 Apr 2016 10:58:06 -0400
Subject: [PATCH 144/194] Revert "reopen SNP protocol for exclusive use by
 grub"

I *think* this should have been replaced by upstream's
49426e9fd2e562c73a4f1206f32eff9e424a1a73, so I'm reverting for now.

May resolve rhbz#1273974.

This reverts commit 147daeab22db793978f952b6f0d832919a1b0081.
---
 grub-core/net/drivers/efi/efinet.c | 39 --------------------------------------
 1 file changed, 39 deletions(-)

diff --git a/grub-core/net/drivers/efi/efinet.c b/grub-core/net/drivers/efi/efinet.c
index b870d3f19..a3ce4c67c 100644
--- a/grub-core/net/drivers/efi/efinet.c
+++ b/grub-core/net/drivers/efi/efinet.c
@@ -465,45 +465,6 @@ grub_efi_net_config_real (grub_efi_handle_t hnd, char **device,
 				    &pxe_mode->dhcp_ack,
 				    sizeof (pxe_mode->dhcp_ack),
 				    1, device, path);
-    net = grub_efi_open_protocol (card->efi_handle, &net_io_guid,
-				  GRUB_EFI_OPEN_PROTOCOL_BY_EXCLUSIVE);
-    if (net) {
-      if (net->mode->state == GRUB_EFI_NETWORK_STOPPED
-	  && efi_call_1 (net->start, net) != GRUB_EFI_SUCCESS)
-	continue;
-
-      if (net->mode->state == GRUB_EFI_NETWORK_STOPPED)
-	continue;
-
-      if (net->mode->state == GRUB_EFI_NETWORK_STARTED
-	  && efi_call_3 (net->initialize, net, 0, 0) != GRUB_EFI_SUCCESS)
-	continue;
-
-      /* Enable hardware receive filters if driver declares support for it.
-	 We need unicast and broadcast and additionaly all nodes and
-	 solicited multicast for IPv6. Solicited multicast is per-IPv6
-	 address and we currently do not have API to do it so simply
-	 try to enable receive of all multicast packets or evertyhing in
-	 the worst case (i386 PXE driver always enables promiscuous too).
-
-	 This does trust firmware to do what it claims to do.
-       */
-      if (net->mode->receive_filter_mask)
-	{
-	  grub_uint32_t filters = GRUB_EFI_SIMPLE_NETWORK_RECEIVE_UNICAST   |
-				  GRUB_EFI_SIMPLE_NETWORK_RECEIVE_BROADCAST |
-				  GRUB_EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS_MULTICAST;
-
-	  filters &= net->mode->receive_filter_mask;
-	  if (!(filters & GRUB_EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS_MULTICAST))
-	    filters |= (net->mode->receive_filter_mask &
-			GRUB_EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS);
-
-	  efi_call_6 (net->receive_filters, net, filters, 0, 0, 0, NULL);
-	}
-
-      card->efi_net = net;
-    }
     return;
   }
 }
-- 
2.13.5

